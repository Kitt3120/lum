name: Build and test
on:
  pull_request:
    branches: [main, staging]
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        env: [ubuntu-64, macos-64, windows-64]
        include:
          - env: ubuntu-64
            os: ubuntu-latest
            toolchain: stable-x86_64-unknown-linux-gnu
          - env: macos-64
            os: macos-latest
            toolchain: stable-x86_64-apple-darwin
          - env: windows-64
            os: windows-latest
            toolchain: stable-x86_64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup toolchain ${{ matrix.toolchain }} for ${{ matrix.os }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Build using ${{ matrix.toolchain }} for ${{ matrix.os }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
  test:
    name: Test
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        env: [ubuntu-64, macos-64, windows-64]
        include:
          - env: ubuntu-64
            os: ubuntu-latest
            toolchain: stable-x86_64-unknown-linux-gnu
          - env: macos-64
            os: macos-latest
            toolchain: stable-x86_64-apple-darwin
          - env: windows-64
            os: windows-latest
            toolchain: stable-x86_64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Rust toolchain ${{ matrix.toolchain }} for ${{ matrix.os }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Test using ${{ matrix.toolchain }} for ${{ matrix.os }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features
